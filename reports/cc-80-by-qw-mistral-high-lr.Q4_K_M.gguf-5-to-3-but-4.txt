 694 51 ==> ( 15840/7.2%): [+] 5793 (0.4) 245s
 819 68 ==> (2580480/6.9%): [ ] 250001 (0.1) 11174s
1977 63 ==> (4181760/0.1%)
1794 73 ==> (2534400/9.4%): [ ] 250001 (0.1) 16291s
1855 54 ==> ( 10500/10.4%): [ ] 250001 (23.8) 9353s
1067 62 ==> (  4224/9.9%): [+] 1706 (0.4) 80s
1607 53 ==> (2499120/3.9%): [ ] 250001 (0.1) 7686s
1687 46 ==> (   300/9.0%): [+] 204 (0.7) 7s
 353 68 ==> (514080/10.9%): [ ] 250001 (0.5) 9209s
2417 46 ==> (  1000/5.6%): [ ] 250001 (250.0) 7492s
2231 51 ==> (    36/35.8%): [+] 373 (10.4) 16s
1518 51 ==> (   336/17.1%): [+] 1999 (5.9) 91s
1073 47 ==> ( 30492/18.8%): [+] 234473 (7.7) 11320s
1916 59 ==> (   168/16.4%): [+] 116 (0.7) 4s
1907 61 ==> ( 34128/7.5%): [ ] 250001 (7.3) 10303s
 206 65 ==> (    74/47.2%): [+] 10 (0.1) 1s
1084 73 ==> (   144/39.6%): [+] 1006 (7.0) 49s
1199 50 ==> ( 27000/27.1%): [+] 34165 (1.3) 1673s
2463 52 ==> (  8300/5.8%): [ ] 250001 (30.1) 8261s
1323 50 ==> (172080/2.3%): [ ] 250001 (1.5) 7402s
1055 69 ==> (  4800/8.7%): [+] 675 (0.1) 29s
1650 65 ==> ( 15552/19.0%): [ ] 250001 (16.1) 17368s
1898 46 ==> (  1100/7.2%): [ ] 250001 (227.3) 7489s
2188 64 ==> ( 35040/15.2%): [ ] 250001 (7.1) 9418s
1375 66 ==> (     1/99.1%): [+] 1 (1.0) 0s


        // Starts at 5.0, goes towards 3.0, but abrubtly stops at 4.0:
        let len_bonus = f32::max(3.0, ((100.0 - chars_i) / 100.0) * 2.0 + 2.0);

        // 5.0 is just made-up, though.
        prod = f32::powf((1.0 + len_bonus) / filter_ratio, 0.25) as f64 * prod;

This seems exactly the same as 5-to-3... I guess the end doesn't matter too much?
