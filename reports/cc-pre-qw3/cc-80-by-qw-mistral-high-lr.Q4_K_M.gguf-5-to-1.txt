 694 51 ==> ( 15840/7.2%): [+] 6199 (0.4) 267s
 819 68 ==> (2580480/6.9%): [ ] 250001 (0.1) 11126s
1977 63 ==> (4181760/0.1%)
1794 73 ==> (2534400/9.4%): [ ] 250001 (0.1) 15879s
1855 54 ==> ( 10500/10.4%): [ ] 250001 (23.8) 9660s
1067 62 ==> (  4224/9.9%): [+] 2634 (0.6) 123s
1607 53 ==> (2499120/3.9%): [ ] 250001 (0.1) 8044s
1687 46 ==> (   300/9.0%): [+] 202 (0.7) 7s
 353 68 ==> (514080/10.9%): [ ] 250001 (0.5) 9578s
2417 46 ==> (  1000/5.6%): [ ] 250001 (250.0) 7972s
2231 51 ==> (    36/35.8%): [+] 319 (8.9) 15s
1518 51 ==> (   336/17.1%): [+] 3636 (10.8) 170s
1073 47 ==> ( 30492/18.8%): [ ] 250001 (8.2) 12757s
1916 59 ==> (   168/16.4%): [+] 140 (0.8) 5s
1907 61 ==> ( 34128/7.5%): [ ] 250001 (7.3) 10669s
 206 65 ==> (    74/47.2%): [+] 10 (0.1) 1s
1084 73 ==> (   144/39.6%): [+] 550 (3.8) 27s
1199 50 ==> ( 27000/27.1%): [+] 35161 (1.3) 1813s
2463 52 ==> (  8300/5.8%): [ ] 250001 (30.1) 8554s

        // Starts at 4.0, goes towards 0.0:
        let len_bonus = f32::max(0.0, ((100.0 - chars_i) / 100.0) * 4.0);

        // 5.0 is just made-up, though.
        prod = f32::powf((1.0 + len_bonus) / filter_ratio, 0.25) as f64 * prod;
